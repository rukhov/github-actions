name: Build Experimental project
run-name: Build No.${{ github.run_number }} on behalf of ${{ github.actor }}

on:
    workflow_dispatch:
    #pull_request: 
    #    types: [opened, reopened, synchronize]
    push: 
        branches: [main]

jobs:

  build:
    env: 
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64

    steps:
      - name: Install Ubuntu Prerequisites
        if: ${{ matrix.platform == 'linux' }}
        run: |
          gcc --version
          sudo apt-get update

      - name: Install Windows Prerequisites
        if: ${{ matrix.platform == 'windows' }}
        run: |
          #pip3 install opencv-python pytest

      - name: Checkout
        uses: actions/checkout@v4

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Env
        run: |
          # ACTIONS_RUNTIME_TOKEN, ACTIONS_RUNTIME_URL should be exposed
          env|sort

      # Cache vcpkg
      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_INSTALLATION_ROOT }}/installed
            ${{ env.VCPKG_INSTALLATION_ROOT }}/downloads
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: vcpkg install
        run: |
          vcpkg install

      - name: Configure project
        run: |
          cmake --preset=${{ matrix.platform }}-rel -S ./ -B ./build

      - name: Build
        run: |
          cmake --build ./build --config=Release

      - name: Make installation
        run: |
          cmake --install ./build --prefix=./install --config=Release

#      - name: Upload artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: atv-tools-${{ matrix.platform }}
#          include-hidden-files: true
#          path: |
#            install/

      - name: Run Tests
        run: |
          ctest --test-dir ./build -T test --output-on-failure -C Release --verbose --output-log ./reports/tests.log
